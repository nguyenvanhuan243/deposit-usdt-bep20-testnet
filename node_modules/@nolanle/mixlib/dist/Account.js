"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Account = void 0;
const chains_1 = require("./chains");
class Account {
    constructor(network, xprv) {
        this.network = network;
        switch (this.network.symbol) {
            case 'BNB':
                this.account = new chains_1.AccountBSC(xprv.neutered(), xprv);
                break;
            case 'ETH':
                this.account = new chains_1.AccountETH(xprv.neutered(), xprv);
                break;
            default:
                throw Error('Unsupport network');
        }
    }
    toPrivateKey() {
        return this.account.toPrivateKey();
    }
    toAddress() {
        return this.account.toAddress();
    }
    validateAddress(address) {
        return this.account.validateAddress(address);
    }
    getBalance(address) {
        return this.account.getBalance(address);
    }
    getTransactions(address) {
        return this.account.getTransactions(address);
    }
    createTransaction(address, amount) {
        return this.account.createTransaction(address, amount);
    }
    estimateMaxTransfer(address) {
        return this.account.estimateMaxTransfer(address);
    }
    sendTransaction(tx) {
        return this.account.sendTransaction(tx);
    }
}
exports.Account = Account;
