import Web3 from 'web3';
import { BIP32Interface } from 'bip32';
import Wallet from 'ethereumjs-wallet';
import { IChainAccount } from '../types';
export declare class AccountETH implements IChainAccount {
    base: number;
    xpub: BIP32Interface;
    xprv?: BIP32Interface;
    endpoint: string;
    wallet: Wallet;
    web3: Web3;
    constructor(xpub: BIP32Interface, xprv?: BIP32Interface);
    toPrivateKey(): string;
    toAddress(): string;
    validateAddress(address: string): boolean;
    getBalance(address?: string): Promise<number>;
    getTransactions(address: string): void;
    createTransaction(address: string, amount: number): Promise<{
        from: string;
        to: string;
        value: string;
        gasPrice: string;
        gas: number;
    }>;
    getEstimatedFee(address: string): Promise<number>;
    estimateMaxTransfer(address: string): Promise<number>;
    sendTransaction(tx: any): Promise<string>;
}
